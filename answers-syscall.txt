用户跑的程序在用户态，操作系统跑在内核态。  
一般情况下，在用户运行的代码都在用户态，当遇到陷阱或中断时会切换内核执行内核代码，
当遇到中断会被动的进入内核态，比如时钟中断，在处理时钟中断的代码中也许需要进程切换。
而陷阱可以主动触发进入内核态，比如系统调用，它是操作系统提供了一些接口，可以完成一些系统提供的功能，比如读写文件，进程创建等等。

无论时中断还是陷阱，都需要保留当前用户态程序的状态，然后进入内核，返回用户态时需要恢复现场。




操作系统具有隔离性，每个程序使用的是虚拟内存，页表可以将虚拟内存映射到物理内存上。用户态代码取址操作实际上会经过硬件将虚拟地址转化为物理地址
不同程序都有单独的页表，所以有单独的虚拟地址空间。
而内核可以看作一个程序，它的页表是将虚拟地址直接映射到物理地址上（大部分虚拟地址是这样的），所以内核代码取址实际上是操作物理地址。

